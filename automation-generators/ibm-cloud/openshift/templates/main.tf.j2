resource  "ibm_resource_instance" "{{generator.attributes.name | replace("-", "_") }}" {
    name     = "{{generator.attributes.name}}-cos"
    plan     = "standard"
    location = "global"
    service  = "cloud-object-storage"
}


resource "ibm_container_vpc_cluster" "{{generator.attributes.name | replace("-", "_") }}" {
    name = "{{generator.attributes.name}}"
    cos_instance_crn = ibm_resource_instance.{{generator.attributes.name | replace("-", "_") }}.id
    kube_version = "{{generator.attributes.ocp_version}}_openshift"
    flavor       = "{{generator.attributes.worker_flavour}}"
    entitlement  = "cloud_pak"
    vpc_id       = ibm_is_vpc.{{generator.attributes.infrastructure.vpc_name | replace("-", "_") }}.id
    worker_count = "{{ ((generator.attributes.number_of_workers) / (generator.attributes.infrastructure.get('subnets',[]) | length)) | int }}"
    resource_group_id = data.ibm_resource_group.thisresourcegroup.id

{% for item in generator.attributes.infrastructure.get('subnets',[]) %}
{% set subnet = generator.config.subnet | selectattr("name", "equalto", item) | list | first %}
    zones {
        subnet_id = ibm_is_subnet.{{item | replace("-", "_") }}.id
        name      = "{{subnet.zone}}"
    }

{% endfor %}
}

{% for item in generator.attributes.openshift_storage %}
{% if item.storage_type == "ocs" %}
resource "ibm_container_vpc_worker_pool" "{{generator.attributes.name | replace("-", "_") }}_ocs" {
    cluster           = "{{generator.attributes.name }}"
    worker_pool_name  = "{{generator.attributes.name }}-{{item.ocs_storage_label}}"
    flavor       = "{{generator.attributes.worker_flavour}}"
    vpc_id       = ibm_is_vpc.{{generator.attributes.infrastructure.vpc_name | replace("-", "_") }}.id
    worker_count      = "{{ (3 / (generator.attributes.infrastructure.get('subnets',[]) | length)) | int }}"
    resource_group_id = data.ibm_resource_group.thisresourcegroup.id

    labels = {
        "roks-storage" = "{{ item.ocs_storage_label }}"
    }

{% for item in generator.attributes.infrastructure.get('subnets',[]) %}
{% set subnet = generator.config.subnet | selectattr("name", "equalto", item) | list | first %}
    zones {
        subnet_id = ibm_is_subnet.{{item | replace("-", "_") }}.id
        name      = "{{subnet.zone}}"
    }

{% endfor %}

    depends_on = [ibm_container_vpc_cluster.{{ generator.attributes.name | replace("-", "_") }}]
}
{% endif %}

{% if item.storage_type == "pwx" %}

data "ibm_container_cluster_config" "cluster_config" {
  depends_on = [ibm_container_vpc_cluster.{{ generator.attributes.name | replace("-", "_") }}]
  cluster_name_id   = "{{generator.attributes.name}}"
  resource_group_id = data.ibm_resource_group.thisresourcegroup.id
  config_dir        = "{{status_dir}}/openshift/kubeconfig"
}

// Module:

module "portworx" {
  source = "./modules/portworx"
  // TODO: With Terraform 0.13 replace the parameter 'enable' or the conditional expression using 'with_iaf' with 'count'
  enable = true

  ibmcloud_api_key = var.ibmcloud_api_key

  // Cluster parameters
  kube_config_path = data.ibm_container_cluster_config.cluster_config.config_file_path
  worker_nodes     = {{generator.attributes.number_of_workers}} // Number of workers

  // Storage parameters
  install_storage  = true
  storage_capacity = {{item.pwx_storage_size}} // In GBs
  storage_iops     = {{item.pwx_storage_iops}} // Must be a number, it will not be used unless a storage_profile is set to a custom profile
  storage_profile  = "{{item.pwx_storage_profile}}"

  // Portworx parameters
  resource_group_name = "{{generator.attributes.name}}"
  region              = "{{ ibm_cloud_region }}"
  cluster_id          = "{{generator.attributes.name}}"
  unique_id           = "{{generator.attributes.name}}"

  // These credentials have been hard-coded because the 'Databases for etcd' service instance is not configured to have a publicly accessible endpoint by default.
  // You may override these for additional security.
  create_external_etcd = true
  etcd_username        = "portworxetcduser"
  etcd_password        = "portworX3tcdpassw0rd"
  // Defaulted.  Don't change
  etcd_secret_name = "px-etcd-certs"

}

{% endif %}

{% endfor %}
