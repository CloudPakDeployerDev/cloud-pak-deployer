{# start - nfs_server definition #}


data "ibm_is_image" "{{generator.attributes.name | replace("-", "_") }}" {
    name = "{{generator.attributes.infrastructure.image}}"
}

{% for storage in generator.attributes.storage %}
resource "ibm_is_volume" "{{generator.attributes.name | replace("-", "_") }}_{{storage.name | replace("-", "_") }}" {
    name           = "{{generator.attributes.name}}-disk-{{storage.name}}"
    resource_group = data.ibm_resource_group.thisresourcegroup.id
    profile        = "{{storage.profile}}"
    zone           = "{{generator.attributes.infrastructure.zone }}"
    capacity       = {{storage.size}}
}
{% endfor %}

resource "ibm_is_instance" "{{generator.attributes.name | replace("-", "_") }}" {
    name = "{{generator.attributes.name }}"
    resource_group =  data.ibm_resource_group.thisresourcegroup.id
    profile = "{{generator.attributes.infrastructure.profile}}"
    keys = [
        {% for item in generator.attributes.infrastructure.get('keys',[]) %}
            ibm_is_ssh_key.{{item | replace("-", "_") }}.id
        {% endfor %}
    ]
    zone = "{{generator.attributes.infrastructure.zone }}"
    vpc = ibm_is_vpc.{{generator.attributes.infrastructure.vpc_name | replace("-", "_") }}.id
    image = data.ibm_is_image.{{generator.attributes.name | replace("-", "_") }}.id
    
    boot_volume {
        name = "{{generator.attributes.name }}-disk-boot"
    }
    primary_network_interface {
        name = "{{generator.attributes.name }}-nic"
        subnet = ibm_is_subnet.{{generator.attributes.infrastructure.subnet | replace("-", "_") }}.id
        {% if generator.attributes.infrastructure.primary_ipv4_address is defined %}
        primary_ipv4_address = "{{generator.attributes.infrastructure.primary_ipv4_address}}"
        {% endif %}
        allow_ip_spoofing = "{{ generator.attributes.infrastructure.allow_ip_spoofing | default('false') | lower }}"
    }


    volumes = [
        {% for storage in generator.attributes.storage %}
        ibm_is_volume.{{generator.attributes.name | replace("-", "_") }}_{{storage.name | replace("-", "_") }}.id{{ "," if not loop.last else "" }}
        {% endfor %}
    ]
}



{# nice to have for debugging #}

/* generator.attributes:
{{generator.attributes | to_nice_json}}
*/