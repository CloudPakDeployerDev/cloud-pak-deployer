---
- name: "Start {{generator.name}} generator"
  debug:
    msg: 'from {{generator.name}} in {{generator.path}} attributes: {{generator.attributes}}'
- stat:
    path: "{{ PATH_TO_TERRAFORM_WORK_DIR }}/{{generator.name}}.yaml"
  register: stats_security_rules
- name: write the initial file
  copy:
    content: '{{ initial_data | to_nice_yaml }}'
    dest: "{{ PATH_TO_TERRAFORM_WORK_DIR }}/{{generator.name}}.yaml"
  vars:
    initial_data: 
      security_rules: {}
  when: stats_security_rules.stat.exists==false

- name: read file
  slurp:
    path: "{{ PATH_TO_TERRAFORM_WORK_DIR }}/{{generator.name}}.yaml"
  register: security_rules_collection
- set_fact:
    security_rules_collection: "{{ security_rules_collection['content'] | b64decode | from_yaml }}"
- ansible.utils.update_fact:
    updates:
    - path: "security_rules_collection['security_rules']['{{generator.attributes.name}}']"
      value: 
        type: tcp
        attributes:
          a: foo
          b: bar
  register: updated

- set_fact:
    security_rules_collection: "{{updated.security_rules_collection}}"
- debug:
    var: security_rules_collection
- copy:
    content: '{{ security_rules_collection | to_nice_yaml }}'
    dest: "{{ PATH_TO_TERRAFORM_WORK_DIR }}/{{generator.name}}.yaml"
- template:
    src: '../templates/main.tf.j2'
    dest: '{{ PATH_TO_TERRAFORM_WORK_DIR }}/{{generator.name}}.tf'
# - name: 'generate instance of "{{generator.name}}" in {{path_to_terraform_folder}}/{{generator.name}}_{{generator.attributes.name}}.tf'
#   template:
#     src: '../templates/main.tf.j2'
#     dest: '{{ path_to_terraform_folder }}/{{generator.name}}_{{generator.attributes.name}}.tf'
