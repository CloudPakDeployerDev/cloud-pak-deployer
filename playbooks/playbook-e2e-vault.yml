---
- name: Run Infrastructure automation
  hosts: localhost
  connection: local
  become: True
  gather_facts: False

  roles:
    - role: vault-connect

  tasks:
  # - name: Validate if the key testkey exist in the vault
  #   include_role: 
  #     name: vault-has-secret
  #   vars:
  #     secret_name: "testkey"
  #     secret_group: "testgroup"    

  # - name: Create secret
  #   include_role: 
  #     name: vault-create-secret
  #   vars:
  #     secret_name: "testkey1"
  #     secret_group: "testgroup"    
  #     secret_payload: "This is the very secret value!"

  # - name: Get secret
  #   include_role: 
  #     name: vault-get-secret
  #   vars:
  #     secret_name: "testkey1"
  #     secret_group: "testgroup"    

  # - name: Delete secret
  #   include_role: 
  #     name: vault-delete-secret
  #   vars:
  #     secret_name: "testkey1"
  #     secret_group: "testgroup"    

  # - name: Get secret
  #   include_role: 
  #     name: vault-get-secret
  #   vars:
  #     secret_name: "icr_api_key_roks-cpd-354"
  #     secret_group: "icr-roks-cpd-354"       


  - name: Create temporary directory to hold SSH key
    tempfile:
      state: directory
      suffix: _ssh
    register: ssh_tempdir

  - name: Create SSH key in directory {{ ssh_tempdir.path }}
    community.crypto.openssh_keypair:
      path: "{{ ssh_tempdir.path }}/test-ssh"

  - name: Show SSH key {{ ssh_tempdir.path }}/test-ssh
    debug:
      msg: "{{lookup('file', ssh_tempdir.path + '/test-ssh') }}"

  - name: Show SSH public key
    debug:
      msg: "{{lookup('file', ssh_tempdir.path + '/test-ssh.pub') }}"

  - name: Store SSH private key "{{ ssh_tempdir.path }}/test-ssh" in vault
    include_role:
      name: vault-create-secret
    vars:
      secret_name: "test-ssh"
      secret_description: "Managed private SSH key"
      secret_payload: "{{lookup('file', ssh_tempdir.path + '/test-ssh') }}"
      secret_group: "testgroup"

  - name: Store SSH public key "{{ ssh_tempdir.path }}/test-ssh.pub" in vault
    include_role:
      name: vault-create-secret
    vars:
      secret_name: "test-ssh-pub"
      secret_description: "Managed public SSH key"
      secret_payload: "{{lookup('file', ssh_tempdir.path + '/test-ssh.pub') }}"
      secret_group: "testgroup"

  - name: Get SSH public key
    include_role: 
      name: vault-get-secret
    vars:
      secret_name: "test-ssh-pub"
      secret_group: "testgroup"

  - name: Store public SSH key
    copy:
      content: "{{ secret_value }}"
      dest: "/tmp/test-ssh-pub.pub"
      mode: 0600