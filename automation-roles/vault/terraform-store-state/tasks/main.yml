---
# tasks file for terraform-sotre-state
- set_fact:
    tf_state_secret_name: "{{ roks_name }}-terraform-tfstate"
    tf_state_content: "{{ lookup('file', status_dir+'/terraform/terraform.tfstate') }}"

- name: Validate if existing terraform state files exist in the vault
  include_role:
    name: vault-get-secret
  vars:
    secret_name: "{{ tf_state_secret_name }}"
    secret_group: "{{ roks_name }}" 

- set_fact:
    keep_tfstate: "{{ 'true' if ( tfstate_persist is not defined or tfstate_persist == 'true') else 'false' }}"

- name: Write the tf_state to the vault, delete existing state
  block:

    - name: Store the terraform tfstate file as {{ tf_state_secret_name }}
      include_role:
        name: vault-create-secret
      vars:
        secret_name: "{{ tf_state_secret_name }}"
        secret_payload: "{{ tf_state_content }}"
        secret_group: "{{ roks_name }}"

    - name: Delete the file {{ status_dir }}/terraform/terraform.tfstate
      ansible.builtin.file:
        path: "{{ status_dir }}/terraform/terraform.tfstate"
        state: absent
      when: "keep_tfstate == 'false'"

    - name: Delete the file {{ status_dir }}/terraform/terraform.tfstate.backup
      ansible.builtin.file:
        path: "{{ status_dir }}/terraform/terraform.tfstate.backup"
        state: absent
      when: "keep_tfstate == 'false'"        

  when:  "tf_state_content | length > 0"
