---

- name: Get or Create Secret Group Validate mandatory variables are defined
  assert:
    that:
      - secret_group is defined
      - ibmcloud_vault_address is defined
      - ibm_vault_iam_token is defined

- name: Get all Vault groups
  uri:
    url: "{{ ibmcloud_vault_address }}/api/v1/auth/ibmcloud/manage/groups"
    headers:
      Authorization: "Bearer {{ ibm_vault_iam_token.json.access_token }}"
      Accept: "application/json"
    method: GET
    status_code: 200
  register: response_getSecretGroups

- debug:
    msg: "{{ response_getSecretGroups }}"

- set_fact:
    response_getSecretGroups_query_result: "{{ response_getSecretGroups.data.groups | json_query(query_secret) }}"
  vars:
    query_secret: "[?name=='{{ secret_group }}']"

- debug:
    msg: "{{ response_getSecretGroups_query_result }}"

- block:
  - name: Create Secret Group {{ secret_group }} if it does not exist
    uri:
      url: "{{ ibmcloud_vault_address }}/api/v1/auth/ibmcloud/manage/groups"
      headers:
        Authorization: "Bearer {{ ibm_vault_iam_token.json.access_token }}"
        Accept: "application/json"
        Content-Type: "application/json"
      method: POST
      body_format: json
      body:
        name: "{{ secret_group }}"
        description: "Group {{ secret_group }}"
      status_code: 200
    register: response_createSecretGroup

  - debug:
    msg: "{{ response_createSecretGroup }}"

  - set_fact:
      secret_group_id: "{{ response_createSecretGroup.data.id }}"

  when: "response_getSecretGroups_query_result|length == 0"


- set_fact:
    secret_group_id: "{{ response_getSecretGroups_query_result[0].id }}"
  when: "response_getSecretGroups_query_result|length > 0"

  - debug:
    msg: "{{ secret_group_id }}"


