- name: Get the worker nodes for the default worker pool
  command: |
    ibmcloud oc workers --cluster {{ current_openshift_cluster.name }} \
      --worker-pool default --output json
  register: default_workers

# Retrieve first worker in default pool for each zone
- name: Location Query zone1
  set_fact:
    _worker_in_zone_1: "{{ default_workers.stdout | from_json | json_query(location_query1) | first }}"
  vars:
    location_query1: "[?location=='{{ ibm_cloud_region }}-1'].id"

- name: Location Query zone2
  set_fact:
    _worker_in_zone_2: "{{ default_workers.stdout | from_json | json_query(location_query2) | first }}"
  vars:
    location_query2: "[?location=='{{ ibm_cloud_region }}-2'].id"

- name: Location Query zone3
  set_fact:
    _worker_in_zone_4: "{{ default_workers.stdout | from_json | json_query(location_query3) | first }}"
  vars:
    location_query3: "[?location=='{{ ibm_cloud_region }}-3'].id"


# TODO: Remove debug
- name: Show Location Query zone2 result
  debug:
    var: _worker_in_zone_1

# TODO: Remove debug
- name: Show Location Query zone2 result
  debug:
    var: _worker_in_zone_2

# TODO: Remove debug
- name: Show Location Query zone1 result
  debug:
    var: _worker_in_zone_4


# Retrieve id of block storage volumes previously created for Portworx, in zone 1-3
- name: Get the block storage volume in zone1
  shell: "ibmcloud is vols | grep pwx-vol-1 | awk '{if(NR>0)print $1}'"
  register: block_volumes_result1

- name: Get the block storage volume in zone2
  shell: "ibmcloud is vols | grep pwx-vol-2 | awk '{if(NR>0)print $1}'"
  register: block_volumes_result2

- name: Get the block storage volume in zone3
  shell: "ibmcloud is vols | grep pwx-vol-3 | awk '{if(NR>0)print $1}'"
  register: block_volumes_result3

# TODO: Remove debug
- name: Show PWX vol1
  debug:
    var: block_volumes_result1

# TODO: Remove debug
- name: Show PWX vol2
  debug:
    var: block_volumes_result2

 # TODO: Remove debug
- name: Show PWX vol3
  debug:
    var: block_volumes_result3


# Verify how many block storage attachments each worker has.  If >1, Portworx block storage has already been attached.
# Zone 1
- name: List block volumes for worker in zone 1
  command: |
    ibmcloud ks storage attachment ls --cluster {{ current_openshift_cluster.name }} --worker {{ _worker_in_zone_1 }} --output json
  register: worker1_storage
  
- name: Set worker1 fact
  set_fact:
    _worker1_storage_count: "{{ worker1_storage.stdout | from_json | json_query(pwx_block_query1) }}"
  vars:
    pwx_block_query1: "volume_attachments[?volume.name=='pwx-vol-1'].volume.name"


# Attach block storage to worker node in same zone
- name: Attach Block volume zone 1 to worker in zone 1
  command: |
    ibmcloud ks storage attachment create --cluster {{ current_openshift_cluster.name }} --volume {{ block_volumes_result1.stdout }} --worker {{ _worker_in_zone_1 }}
  when: "_worker1_storage_count|length == 0"


# Zone 2
- name: List block volumes for worker in zone 2
  command: |
    ibmcloud ks storage attachment ls --cluster {{ current_openshift_cluster.name }} --worker {{ _worker_in_zone_2 }} --output json
  register: worker2_storage

- name: Set worker2 fact
  set_fact:
    _worker2_storage_count: "{{ worker2_storage.stdout | from_json | json_query(pwx_block_query2) }}"
  vars:
    pwx_block_query2: "volume_attachments[?volume.name=='pwx-vol-2'].volume.name"      

# Attach block storage to worker node in same zone
- name: Attach Block volume zone 2 to worker in zone 2
  command: |
    ibmcloud ks storage attachment create --cluster {{ current_openshift_cluster.name }} --volume {{ block_volumes_result2.stdout }} --worker {{ _worker_in_zone_2 }}
  when: "_worker2_storage_count|length == 0"


# Zone 3
- name: List block volumes for worker in zone 3
  command: |
    ibmcloud ks storage attachment ls --cluster {{ current_openshift_cluster.name }} --worker {{ _worker_in_zone_4 }} --output json
  register: worker3_storage

- name: Set worker3 fact
  set_fact:
    _worker3_storage_count: "{{ worker3_storage.stdout | from_json | json_query(pwx_block_query3) }}"  
  vars:
    pwx_block_query3: "volume_attachments[?volume.name=='pwx-vol-3'].volume.name"

# Attach block storage to worker node in same zone
- name: Attach Block volume zone 3 to worker in zone 3
  command: |
    ibmcloud ks storage attachment create --cluster {{ current_openshift_cluster.name }} --volume {{ block_volumes_result3.stdout }} --worker {{ _worker_in_zone_4 }}
  when: "_worker3_storage_count|length == 0"
