---

- name: Validate the Cluster Monitor is already configured
  shell: |
    oc get cm -n openshift-monitoring --no-headers | grep cluster-monitoring-config | wc -l
  register: _cluster_monitor_config_exists
    
- when: _cluster_monitor_config_exists.stdout == "0"
  block:

    - set_fact:
        _monitor_persist_sc: "{{ _monitors.openshift_monitoring_persist_storage_class | default ('') }}"
        _monitor_persist_size_gb: "{{ _monitors.openshift_persist_storage_size_in_gb | default ('100') }}"

    - name: Create cluster monitor configuration file
      template:
        src: enable-openshift-monitoring.j2
        dest: "{{ _cloud_pak_service_monitor_dir.path }}/cluster-monitor-config.yaml"

    - name: Create cluster monitor configuration
      shell: |
        oc create -f {{ _cloud_pak_service_monitor_dir.path }}/cluster-monitor-config.yaml
    
    - name: Wait 15 seconds
      pause:
        seconds: 15

    - name: Wait until openshift-monitoring prometheus pods are ready
      shell: oc wait -n openshift-monitoring --for=condition=Ready pod -l app=prometheus --timeout=240s
      register: _openshift_user_workload_pod

    - debug:
        msg: "{{ _openshift_user_workload_pod }}"

    - name: Wait until openshift-user-workload-monitoring pods are ready
      shell: oc wait -n openshift-user-workload-monitoring --for=condition=Ready pod --all --timeout=240s
      register: _openshift_user_workload_pod_enable_persist

    - debug:
        msg: "{{ _openshift_user_workload_pod_enable_persist }}"        

    - when: _monitor_persist_sc != ""
      block:
        - name: Create user workload cluster monitor configuration file
          template:
            src: persist-user-workload-monitoring.j2
            dest: "{{ _cloud_pak_service_monitor_dir.path }}/user-workload-cluster-monitor-config.yaml"  

        - name: Create cluster monitor configuration
          shell: |
            oc create -f {{ _cloud_pak_service_monitor_dir.path }}/user-workload-cluster-monitor-config.yaml
            
        - name: Wait 15 seconds
          pause:
            seconds: 15

        - name: Wait until openshift-user-workload-monitoring pods are restarted with the configured Storage
          shell: oc wait -n openshift-user-workload-monitoring --for=condition=Ready pod/prometheus-user-workload-0 pod/prometheus-user-workload-1 --timeout=240s
          register: _openshift_user_workload_pod_enable_persist

        - debug:
            msg: "{{ _openshift_user_workload_pod_enable_persist }}"

- name: Validate Cloud Pak for Data ServiceMonitor is configured
  shell: |
    oc get ServiceMonitor -n {{ current_cp4d_cluster.project }} --no-headers | grep zen-watchdog | wc -l
  register: _cp4d_servicemonitor_exists

- when: _cp4d_servicemonitor_exists.stdout == "0"
  block:

    - name: Create Cloud Pak for Data ServiceMonitor for project {{ current_cp4d_cluster.project }}
      template:
        src: cp4d-service-monitor.j2
        dest: "{{ _cloud_pak_service_monitor_dir.path }}/cp4d-service-monitor-config.yaml"
    
    - name: Create Cloud Pak for Data ServiceMonitor
      shell: |
        oc create -f "{{ _cloud_pak_service_monitor_dir.path }}/cp4d-service-monitor-config.yaml"