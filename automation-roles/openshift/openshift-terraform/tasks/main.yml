---
- name: Validate mandatory variables are defined
  assert:
    that:
      - cloud_platform is defined

- name: Validate cloud_platform is implemented
  fail: msg="cloud_platform {{ cloud_platform }} is not implemented, current implemented cloud platforms are {{ implemented_cloud_platform_types }} "
  when: "cloud_platform not in implemented_cloud_platform_types"

- name: Retrieve Terraform tfstate from the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ all_config.roks[0].name }}-terraform-tfstate"
    secret_group: "{{ all_config.roks[0].name }}"

- name: When the terraform state exist, write to disk
  block:

    - name: Create temporary terraform directory if it does not exist
      file:
        path: "{{status_dir}}/terraform"
        state: directory

    - copy:
        content: "{{ secret_value }}"
        dest: "{{ status_dir }}/terraform/terraform.tfstate"
      when: "secret_value|length > 0"

  when: "not secret_value == ''"

- name: OpenShift Terraform for IBM Cloud
  block:
    - name: Provision OpenShift on IBM Cloud Classic Infrastructure
      include_role: 
        name: ibmcloud-terraform-classic
      when: all_config.roks[0].infrastructure.type == "classic"
  when: "cloud_platform == 'ibm-cloud'"
    
- name: Provision OpenShift on IBM Cloud VPC Infrastructure
  block:
    - name: Provision OpenShift on IBM Cloud VPC Infrastructure
      include_role: 
        name: ibmcloud-terraform-vpc
      when: all_config.roks[0].infrastructure.type == "vpc"
  when: "cloud_platform == 'ibm-cloud'"

- set_fact:
    tf_state_content: "{{ lookup('file', status_dir+'/terraform/terraform.tfstate') }}"

- name: Store the terraform tfstate file as {{ all_config.roks[0].name }}-terraform-tfstate
  include_role:
    name: vault-create-secret
  vars:
    secret_name: "{{ all_config.roks[0].name }}-terraform-tfstate"
    secret_group: "{{ all_config.roks[0].name }}"
    secret_payload: "{{ tf_state_content }}"
  when: "tf_state_content | length > 0"

- fail:
    msg: Error occurred during Terraform apply, state has been preserved. Failing now. Check the apply log for details.
  when: terraform_apply.rc!=0
