- name: Validate mandatory variables are defined
  assert:
    that:
      - secret_name is defined
      - secret_group is defined

- name: Validate secret payload is defined if no file specified
  assert:
    that:
      - secret_payload is defined
  when: secret_file is not defined

- name: Get secret from secret file if it was specified
  set_fact:
    secret_value_to_set: "{{ lookup('file', secret_file) | b64encode }}"
  when: 
  - secret_file is defined
  - secret_file != ''

- name: Set secret value from payload if no file specified
  set_fact:
    secret_value_to_set: "{{ secret_payload | b64encode}}"
  when: (secret_file is not defined) or (secret_file == '')

- name: Set Secret Vault Hashicorp
  block:
    - name: Validate mandatory variables are defined for Hashicorp Vault
      assert:
        that:
          - vault_secret_path is defined
          - vault_secret_field is defined

    - set_fact:
        _secret_field: "{{ vault_secret_field }}"

    - set_fact:
        _secret_field: "{{ secret_name.split(',')[1] }}"
      when: secret_name is search(",")

    - set_fact:
        _secret_name: "{{ secret_name.split(',')[0] }}"

    - set_fact:
        _hashicorp_secret_name_path: "{{ _secret_name }}"
      when: _secret_name is search("/")

    - set_fact:
        _hashicorp_secret_name_path: "{{ vault_secret_path }}/{{ secret_group}}/{{ _secret_name }}"
      when: 
      - (vault_secret_path_append_group | default(True) | bool)
      - not _secret_name is search("/")

    - set_fact:
        _hashicorp_secret_name_path: "{{ vault_secret_path }}/{{ _secret_name }}"
      when: 
      - not (vault_secret_path_append_group | default(True) | bool)
      - not _secret_name is search("/")

    - include_tasks: create-secret-hashicorp-api-key.yml
      vars:
        hashicorp_vault_address: "{{ vault_url }}"
        hashicorp_secret_name_path: "{{ _hashicorp_secret_name_path }}"
        hashicorp_secret_field: "{{ _secret_field }}"
        hashicorp_secret_payload: "{{ secret_payload }}"
      when: 
      - vault_authentication_type == 'api-key'
      - (secret_file | default("") == "")

    - include_tasks: create-secret-hashicorp-api-key.yml
      vars:
        hashicorp_vault_address: "{{ vault_url }}"
        hashicorp_secret_name_path: "{{ _hashicorp_secret_name_path }}"
        hashicorp_secret_field: "{{ _secret_field }}"
        hashicorp_secret_file: "{{ secret_file }}"
      when: 
      - vault_authentication_type == 'api-key'
      - (secret_file | default("") != "")

    - include_tasks: create-secret-hashicorp-certificate.yml
      vars:
        hashicorp_vault_address: "{{ vault_url }}"
        hashicorp_secret_name_path: "{{ _hashicorp_secret_name_path }}"
        hashicorp_secret_field: "{{ _secret_field }}"
        hashicorp_secret_payload: "{{ secret_payload }}"
      when:
      - vault_authentication_type == 'certificate'
      - (secret_file | default("") == "")

    - include_tasks: create-secret-hashicorp-certificate.yml
      vars:
        hashicorp_vault_address: "{{ vault_url }}"
        hashicorp_secret_name_path: "{{ _hashicorp_secret_name_path }}"
        hashicorp_secret_field: "{{ _secret_field }}"
        hashicorp_secret_file: "{{ secret_file }}"
      when:
      - vault_authentication_type == 'certificate'
      - (secret_file | default("") != "")

  when: vault_type == 'hashicorp-vault'
  rescue:
    #Re-connect to vault
    - include_role:
        name: vault-connect
    
    #Re-attempt the set-secret
    - include_tasks: main.yml


- name: Set secret Vault IBM Cloud
  block:

    - name: Fail if a secret field was specified for a vault other than Hashicorp
      fail:
        msg: "Secret name {{ secret_name }} can only have a secret field specification for Hashicorp Vault"
      when: secret_name is search(",")

    - include_tasks: create-secret-ibmcloud.yml
      vars:
        ibmcloud_vault_address: "{{ vault_url }}"
        ibm_cloud_secret_name: "{{ secret_name }}"
        ibm_vault_secret_payload: "{{ secret_value_to_set }}"
  when: "vault_type == 'ibmcloud-vault'"
  rescue:
    #Re-connect to vault
    - include_role:
        name: vault-connect
    
    #Re-attempt the set-secret
    - include_tasks: main.yml  

- name: Set secret in Vault file
  block:
    - name: Fail if a secret field was specified for a vault other than Hashicorp
      fail:
        msg: "Secret name {{ secret_name }} can only have a secret field specification for Hashicorp Vault"
      when: secret_name is search(",")

    - include_tasks: create-secret-file.yml
      vars:
        file_secret_payload: "{{ secret_value_to_set }}"
  when: "vault_type == 'file-vault'"

- name: Secret {{ secret_group }}/{{ secret_name }} was set
  debug:
    msg: ""
  vars:
    ansible_callback_diy_runner_on_ok_msg: |+2
      Secret {{ secret_group }}/{{ secret_name }} was set
