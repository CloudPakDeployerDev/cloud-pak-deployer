---
- name: Validate mandatory variables are defined
  assert:
    that:
      - cloud_platform is defined

- name: Validate cloud_platform is implemented
  fail: msg="cloud_platform {{ cloud_platform }} is not implemented, current implemented cloud platforms are {{ implemented_cloud_platform_types }} "
  when: "cloud_platform not in implemented_cloud_platform_types"

- name: Download ROSA command line tool 
  include_role:
    name: aws-download-rosa

- name: Login to ROSA
  include_role:
    name: aws-login-rosa

- name: Get aws-access-key secret from in the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "aws-access-key"
    secret_group: "{{ environment_name }}" 

- set_fact:
    _aws_access_key: "{{ secret_value }}"

- name: Get aws-secret-access-key secret from the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "aws-secret-access-key"
    secret_group: "{{ environment_name }}" 

- set_fact:
    _aws_secret_access_key: "{{ secret_value }}"

- name: Check if ROSA cluster already exists
  shell: |
    rosa describe cluster \
      --cluster {{ _current_openshift_cluster.name }} \
      --region {{ _current_openshift_cluster.infrastructure.aws_region }}
  environment:
    AWS_ACCESS_KEY_ID: "{{ _aws_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ _aws_secret_access_key }}"
  register: _aws_describe_cluster
  failed_when: False
    
- name: Create ROSA cluster
  shell: |
    rosa create cluster --cluster-name {{ _current_openshift_cluster.name }} \
      --version {{ _current_openshift_cluster.ocp_version }} \
      --multi-az \
      --region {{ _current_openshift_cluster.infrastructure.aws_region }} \
      --compute-machine-type {{ _current_openshift_cluster.worker_flavour }} \
      --compute-nodes {{ _current_openshift_cluster.number_of_workers }}
  environment:
    AWS_ACCESS_KEY_ID: "{{ _aws_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ _aws_secret_access_key }}"
  when: _aws_describe_cluster.rc != 0

- name: Wait until cluster is ready
  shell: |
    shell: |
    rosa describe cluster \
      --cluster {{ _current_openshift_cluster.name }} \
      --region {{ _current_openshift_cluster.infrastructure.aws_region }} \
      -o json
  environment:
    AWS_ACCESS_KEY_ID: "{{ _aws_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ _aws_secret_access_key }}"
  register: _aws_describe_cluster
  until: ((_aws_describe_cluster.stdout | from_json).state | default("") | lower) == 'ready'
  delay: 60
  retries: 120
