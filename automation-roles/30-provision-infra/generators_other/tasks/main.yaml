- name: Ensure that variables are present and required folders are in place
  block:
    - name: Check that all required variables are set
      assert:
        quiet: true
        that:
          - "{{item}} is defined"
        fail_msg: "'{{item}}' needs to be set for this role to work"
      with_items:
      - path_to_config_dir
      - path_to_generators_dir
      - path_to_terraform_work_dir
      
    - name: Delete terraform work folder if it already exists
      file:
        path: '{{ path_to_terraform_work_dir }}'
        state: absent

    - name: Create terraform work folder if it does not exist
      file:
        path: '{{ path_to_terraform_work_dir }}'
        state: directory

- name: parse the yaml config and provide it as a fact merged_config
  block:
    - name: 'get stats of {{path_to_config_dir}}/config'
      stat:
        path: "{{path_to_config_dir}}/config"
      register: stats_of_config_dir
    # - name: debug stats_of_config_dir
    #   debug:
    #     var: stats_of_config_dir
    # - name: debug path_to_definition_file # sorry, no file anymore
    #   debug:
    #     var: path_to_definition_file

    - name: 'lookup *.yaml files in {{ stats_of_config_dir.stat.path }}'
      find:
        paths: '{{ stats_of_config_dir.stat.path }}'
        file_type: file
        patterns: '*.yaml'
      register: found_config_files
    - name: 
      debug:
        var: found_config_files
    
    - name: show generator directories
      set_fact: 
        raw_config_files: {}
        merged_config: {}
    - name: loop over config files
      include_tasks: ./process_single_config_file.yaml
      vars:
        relative_path_to_config_file: "{{ item.path | replace( path_to_config_dir+'/config', '' ) }}"
        absolute_path_to_config_file: "{{ item.path }}"
      loop: '{{ found_config_files.files }}'
      loop_control:
        label: "{{ item.path }}"

    # ### include_vars doesn't merge list
    # - name: include files in the config_dir
    #   include_vars:
    #     name: included_config
    #     dir: '{{ stats_of_config_dir.stat.path }}'
    #     extensions: ['yaml','yml']
    #   when: stats_of_config_dir.stat.isdir is defined and stats_of_config_dir.stat.isdir
    # ###


      # ### This is is how it worked before
      # - name: Pull in the path_to_definitions_folder and read the {{ definition_name }}.yaml
      #   include_vars: "{{path_to_definitions_folder}}/{{definition_name}}.yaml"
      #   register: generators_included_definition
      # - debug:
      #     var: generators_included_definition.ansible_facts
      # ###
    - debug:
        msg: "{{merged_config}}"
          #vars:
          #    jsonVar: "{{ lookup('file', '{{definition_name}}.yaml') | from_yaml }}"



- name: show generator directories
  set_fact: 
    generators_index:

- name: List the folders in {{path_to_generators_dir}}, don't recurse
  find:
    file_type: directory
    paths: "{{path_to_generators_dir}}"
    recurse: no
  register: generators_generator_folders

- name: show generator directories
  set_fact: 
    generators_index:
      available: "{{ generators_generator_folders['files'] | map(attribute='path') | map('regex_replace','^.*/(.*)$','\\1') | list }}"

# ### TODO: check if the roles are available, before we even try to run them


- name: Run generators
  include_tasks: "{{path_to_generators_dir}}/{{ item[0].key }}/main.yaml"
  vars:
    generator:
      name: "{{ item[0].key }}"
      path: "{{path_to_generators_dir}}/{{ item[0].key }}"
      attributes: "{{ item[1] }}"
      config: "{{ merged_config }}"
    GENERATOR_NAME: "{{ item[0].key }}"
    GENERATOR_DIR: "{{path_to_generators_dir}}/{{ item[0].key }}"
    PATH_TO_TERRAFORM_WORK_DIR: "{{ path_to_terraform_work_dir }}"
  loop: "{{ merged_config | dict2items | subelements('value')}}"
- name: put the provider config to the terraform folder
  template:
    src: '../templates/provider.tf.j2'
    dest: '{{ path_to_terraform_work_dir }}/provider.tf'