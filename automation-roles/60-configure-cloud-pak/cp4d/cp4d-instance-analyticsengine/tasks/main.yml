---
- set_fact:
    _analyticsengine_cartridge: "{{ _cartridges_to_install | json_query(query_cartridge) | first | default({}) }}"
  vars:
    cartridge_name: "analyticsengine"
    query_cartridge: "[?olm_utils_name=='{{ cartridge_name }}']"

- name: Show Analytics Engine cartridge
  debug:
    var: _analyticsengine_cartridge

- name: Loop through each Analytics Engine instance to provision
  block:
  - name: Provision Analytics Engine instance from the DV cartridge specification
    include_tasks: provision_analytics_instance.yml
    loop: "{{ _analyticsengine_cartridge.instances | default([]) }}"
    loop_control:
      loop_var: _ae_instance
  when: 
  - _analyticsengine_cartridge.instances is defined
  - (_p_delete_all_instances | default(False)) == False

- name: Get all current Analytics Engine instances
  uri:
    url: 'https://{{ cp4d_url.stdout }}/zen-data/v3/service_instances?addon_type={{ cp4d_analyticsengine_instance_addon_type }}'
    method: GET
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ cp4d_login.token }}"
    return_content: yes
    validate_certs: no
    status_code: 200
  register: _all_ae_instances

# Loop through all deployed Analytics Engine instance definitions to check if instance no longer exists in the config
- name: Loop through each Analytics Engine instance to check if it must be deleted
  include_tasks: delete_ae_instance.yml
  loop: "{{ _all_ae_instances['service_instances'] | default([]) }}"
  loop_control:
    loop_var: _ae_instance