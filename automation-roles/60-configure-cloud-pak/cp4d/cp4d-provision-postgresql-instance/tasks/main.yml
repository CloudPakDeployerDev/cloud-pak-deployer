---
- set_fact:
    _postgresql_cartridge: "{{ current_cp4d_cluster.cartridges|json_query(query_cartridge)|first }}"
  vars:
    cartridge_name: "postgresql"
    query_cartridge: "[?name=='{{ cartridge_name }}']"  

- when: "not _postgresql_cartridge.instances is defined"
  block:
    - name: "Skip provision PostgreSQL instance"
      debug:
        msg: "Cartridge postgresql has no instances specified, skipping provisioning PostgreSQL instance"

- when: _postgresql_cartridge.instances is defined
  block:
    - name: Provision each PostgreSQL instance from the postgresql cartridge specification
      include_tasks: provision_postgresql_instance.yml
      loop: "{{ _postgresql_cartridge.instances | default([]) }}"
      loop_control:
        loop_var: _postgresql_instance
      when: _postgresql_cartridge.instances | length > 0


- name: Get all current CP Deployer managed instances of CPDEdbService
  shell: oc get CPDEdbService -n {{ current_cp4d_cluster.project }} -o json -l managedByCpDeployer=yes
  register: _all_cpdedbservice_instances_output

- set_fact:
    _all_cpdedbservice_instances: "{{ _all_cpdedbservice_instances_output.stdout | from_json }}"

#Loop through all CP Deployer managed CPDEdbService instance definitions
- name: "Loop through each CPDEdbService instance for delete"
  include_tasks: delete_postgresql_instance.yml
  loop: "{{ _all_cpdedbservice_instances['items'] | default([]) }}"
  loop_control:
    loop_var: _postgresql_instance