---
- set_fact:
    cp4d_admin_password_vault_key_name: "cp4d_admin_{{ current_cp4d_cluster.project| replace('-','_') }}_{{ current_cp4d_cluster.openshift_cluster_name| replace('-','_') }}"

- name: Validate if an existing admin password for {{ cp4d_admin_password_vault_key_name }} exists in the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ cp4d_admin_password_vault_key_name }}"
    secret_group: "{{ environment_name }}" 

- name: when the password exists, assign it to the cp4d_login_password variable
  block:

    - name: set cp4d admin passwordpassword
      set_fact:
        cp4d_login_password: "{{ secret_value }}"

    - set_fact:
        cp4d_configure_cpd_admin: 1

  when: "not secret_value==''"

- name: Error if no secret value is returned
  fail: msg="Unable to acquire secret value for {{ cp4d_admin_password_vault_key_name }} from group {{ environment_name }}"
  when: "secret_value==''"

- name: Get Route to Cloud Pak for Data
  shell: |
    oc --namespace {{ current_cp4d_cluster.project }} get route -l component=ibm-nginx \
        -o jsonpath="{.items[0].spec.host}"
  register: cp4d_url

- name: Login to Cloud Pak for Data
  shell: "curl -k -X POST -H 'cache-control: no-cache' -H 'Content-Type: application/json;charset=UTF-8' -d '{\"username\":\"{{ cp4d_login_username }}\",\"password\":\"{{ cp4d_login_password }}\"}' 'https://{{ cp4d_url.stdout }}/icp4d-api/v1/authorize'"
  register: cp4d_login_result

- set_fact:
    cp4d_login: "{{ cp4d_login_result.stdout | from_json }}"

