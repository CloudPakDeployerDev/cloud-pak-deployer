---

- set_fact:
    bastion_host: "{{ nfs_server['infrastructure']['bastion_host'] }}"
    nfs_server_ip: "{{ nfs_server['infrastructure']['primary_ipv4_address'] }}"
    nfs_server_ssh_key: "{{ nfs_server['infrastructure']['ssh_key'] }}"

- name: Retrieve Terraform tfstate from the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ all_config.roks[0].name }}-terraform-tfstate"
    secret_group: "{{ all_config.roks[0].name }}"

- set_fact:
    tfstate: "{{ secret_value }}"

- debug:
    var: tfstate

- set_fact:
    bastion_fip: "{{ tfstate.resources | json_query(query) | first }}"
  vars:
    query: >-
      [?name=='{{bastion_host}}' && type=='ibm_is_floating_ip'].
      {public_ip_address: instances[0].attributes.address, public_ip_name: instances[0].attributes.name}

- debug:
    msg: "{{ bastion_fip }}"

- name: Create temporary directory to hold SSH private key
  tempfile:
    state: directory
    suffix: _ssh
  register: ssh_key_dir

- name: Retrieve SSH private key {{ nfs_server_ssh_key }}-key from the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ nfs_server_ssh_key }}-key"
    secret_group: "{{ all_config.vpcs[0].name }}"

- name: Store SSH private key in file {{ ssh_key_dir.path }}/id_rsa
  copy:
    content: "{{ secret_value }}\n"
    dest: "{{ ssh_key_dir.path }}/id_rsa"
    mode: 0600

# TODO: Temporary!!!
- name: Retrieve SSH public key from the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ nfs_server_ssh_key }}"
    secret_group: "{{ all_config.vpcs[0].name }}"

- name: Store SSH public key in file
  copy:
    content: "{{ secret_value }}"
    dest: "{{ ssh_key_dir.path }}/id_rsa.pub"
    mode: 0600
# TODO: Temporary!!!


- name: Create dynamic Ansible group vpc_bastion_server
  add_host:
    name: "{{bastion_fip.public_ip_address}}"
    groups: vpc_bastion_server
    ansible_ssh_private_key_file: "{{ ssh_key_dir.path }}/id_rsa"

- name: Create dynamic Ansible group vpc_nfs_servers
  add_host:
    name: "{{nfs_server_ip}}"
    groups: vpc_nfs_servers
    ansible_ssh_private_key_file: "{{ ssh_key_dir.path }}/id_rsa"
    ansible_ssh_common_args: '-o ProxyCommand="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i {{ ssh_key_dir.path }}/id_rsa -W %h:%p -q {{ bastion_fip.public_ip_address }}"'
    nfs_server: "{{ nfs_server }}"
