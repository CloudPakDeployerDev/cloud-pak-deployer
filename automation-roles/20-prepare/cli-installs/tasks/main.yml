---
# tasks file for cli_installs

- name: Check Openshift CLI oc executable is present
  stat:
    path: "{{oc_executable_location}}/oc"
  register: oc_file

- name: Download and install the OpenShift CLI oc executable
  block:
    - tempfile:
        state: directory
      register: oc_temp_download_dir

    - name: Download OpenShift CLI oc archive
      get_url:
        url: "{{oc_download_url}}"
        timeout: 30
        dest: "{{oc_temp_download_dir.path}}"

    - name: Extract oc archive
      unarchive:
        src: "{{oc_temp_download_dir.path}}/oc.tar.gz"
        dest: "{{oc_temp_download_dir.path}}"
        remote_src: yes
    - name: Move oc to executable location
      command: "mv {{oc_temp_download_dir.path}}/oc {{oc_executable_location}}"

    - name: Clean oc download folder
      file:
        path: "{{oc_temp_download_dir.path}}"
        state: absent
  when: oc_file.stat.exists==False

- name: Check ibmcloud CLI is present
  stat:
    path: /usr/local/bin/ibmcloud
  register: ibmcloud_file

- name: Install ibmcloud CLI executable
  shell: "curl -fsSL {{ibmcloud_download_url}} | sh"
  args:
    warn: false
  when: ibmcloud_file.stat.exists==False

- name: Install ibmcloud CLI plugins
  shell: "ibmcloud plugin install {{item}} -f"
  loop: "{{ ibmcloud_plugins }}"

- name: Create cpd-cli download folder {{cp4d_cli_dir}}
  file:
    path: "{{cp4d_cli_dir}}"
    state: directory

- name: Check if cpd-cli exists in download directory
  stat:
    path: "{{cp4d_cli_dir}}/cpd-cli"
  register: cpd_cli_file

- name: Install cpd-cli CLI executable
  block:
    - tempfile:
        state: directory
      register: cpd_temp_download_dir

    - name: Download cpd-cli archive
      get_url:
        url: "{{cpd_cli_download_url}}"
        timeout: 30
        dest: "{{cpd_temp_download_dir.path}}"

    - name: Extract cpd-cli archive to {{ cp4d_download_dir }}
      unarchive:
        src: "{{cpd_temp_download_dir.path}}/{{cpd_cli_name}}.tgz"
        dest: "{{cp4d_cli_dir}}"
        remote_src: yes

    - name: Remove cpd-cli download folder
      file:
        path: "{{cpd_temp_download_dir.path}}"
        state: absent
  when: cpd_cli_file.stat.exists==False

- name: Create repo.yaml
  template:
    src: repo.yaml.j2
    dest: "{{cp4d_cli_dir}}/repo.yaml"

#- name: Set correct permissions to the main Data folder
#  ansible.builtin.file:
#    path: "{{ cp4d_cli_dir }}/.."
    mode: '0777'
