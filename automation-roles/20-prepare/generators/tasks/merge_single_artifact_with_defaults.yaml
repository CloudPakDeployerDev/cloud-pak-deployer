---
- name: set config_complete
  set_fact:
    config_complete: "{{ config_complete | default({}) | combine( {artifact_key: []}) }}"

# - name: merge 
#   set_fact: 
- name: merge each artifact_item with the default, it there is a default defined
  debug:
    # 'combined' attributes win over the source-dicts attributes
    # msg: "{{ artifact_item | combine() }}"
    msg: "{{ defaults_merged | list2 | selectattr(default, 'undefined') }}
  # - debug:
  #     msg: "found a defaults entry for {{ artifact_key }}"

  # - set_fact:

  loop: "{{ artifact_list }}"
  loop_control:
    loop_var: artifact_item
  # check if defaults_merged-dict has a key named i.e. "vsi"
  when: "artifact_key|string in defaults_merged.keys()" 
# when: "defaults_merged.{{artifact_key}} is defined" <- will throw a warning


  # TODO: could possibly be solved with jinja2
  # {{ defaults_merged | selectattr(artifact_key, "defined") }}
- debug:
    msg: "{{ artifact_key }}"