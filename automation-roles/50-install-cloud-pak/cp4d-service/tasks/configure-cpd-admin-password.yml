---
- set_fact:
    cp4d_admin_password_vault_key_name: "cp4d_admin_{{ current_cp4d_cluster.project| replace('-','_') }}_{{ current_cp4d_cluster.openshift_cluster_name| replace('-','_') }}"

- name: Validate if an existing admin password for {{ cp4d_admin_password_vault_key_name }} exists in the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ cp4d_admin_password_vault_key_name }}"
    secret_group: "{{ environment_name }}"

- name: when the password exists, assign it to the cp4d_login_password variable
  block:

    - name: set password
      set_fact:
        cp4d_login_password: "{{ secret_value }}"

    - set_fact:
        cp4d_configure_cpd_admin: 1

  when: "not secret_value==''"

- name: When no password exists, using the default admin password set a strong password for the admin user and store it in the vault
  block:

    - set_fact:
        cp4d_new_admin_password: "{{ lookup('password', '/dev/null length=25 chars=ascii_letters') }}"

    - name: Get Route to Cloud Pak for Data
      shell: "oc --namespace {{ current_cp4d_cluster.project }} get route {{ current_cp4d_cluster.project }}-cpd -o jsonpath=\"{.spec.host}\""
      register: cp4d_url

    - name: Login to Cloud Pak for Data
      shell: "curl -k -X POST -H 'cache-control: no-cache' -H 'Content-Type: application/json;charset=UTF-8' -d '{\"username\":\"{{ cp4d_login_username }}\",\"password\":\"{{ cp4d_login_password }}\"}' 'https://{{ cp4d_url.stdout }}/icp4d-api/v1/authorize'"
      register: cp4d_login_result
      retries: 60
      delay: 10
      until: cp4d_login_result.rc==0

    - set_fact:
        cp4d_login: "{{ cp4d_login_result.stdout | from_json }}"

    - name: Creating a new password for user {{ cp4d_login_username }}
      shell: "curl -s -k -X POST https://{{ cp4d_url.stdout }}/icp4d-api/v1/changepassword \
              -H 'Authorization: Bearer {{ cp4d_login.token }}' \
              -H 'Content-Type: multipart/form-data' \
              -H 'cache-control: no-cache' \
              -F current_password={{ cp4d_login_password }} \
              -F new_password={{ cp4d_new_admin_password }}"
      register: cp4d_change_password_result
      retries: 10
      delay: 30
      until: cp4d_change_password_result.rc==0

    - set_fact:
        cp4d_change_password_result_json: "{{ cp4d_change_password_result.stdout| from_json }}"

    - name: Update CP4D admin password failed
      fail:
        msg: "Updating the CP4D admin password failed. Non 200 return code returned. Instead {{ cp4d_change_password_result_json._messageCode_ }} returned."
      when: "not cp4d_change_password_result_json._messageCode_ == '200'"

    - set_fact:
        cp4d_login_password: "{{ cp4d_new_admin_password }}"

    - debug:
        msg: "CP4D admin password storing in vault as: {{ cp4d_admin_password_vault_key_name }}. Password set to: {{ cp4d_login_password }}"

    - name: Store the CP4D admin password into the vault as {{ cp4d_admin_password_vault_key_name }}
      include_role:
        name: vault-create-secret
      vars:
        secret_name: "{{ cp4d_admin_password_vault_key_name }}"
        secret_description: "CP4D admin password for namespace {{ current_cp4d_cluster.project }}, cluster {{ current_cp4d_cluster.openshift_cluster_name }}" # description is optional
        secret_payload: "{{ cp4d_login_password }}"
        secret_group: "{{ environment_name }}"

    - set_fact:
        cp4d_configure_cpd_admin: 1

  when: "secret_value==''"
