---
- set_fact:
    _cp4d_admin_password_vault_key_name: "cp4d_admin_{{ current_cp4d_cluster.project| replace('-','_') }}_{{ current_cp4d_cluster.openshift_cluster_name| replace('-','_') }}"

- name: Validate if an existing admin password for {{ _cp4d_admin_password_vault_key_name }} exists in the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ _cp4d_admin_password_vault_key_name }}"
    secret_group: "{{ environment_name }}"

- name: Save admin password retrieved from vault
  set_fact:
    _cp4d_admin_password_vault: "{{ secret_value }}"

- name: Extract admin password from OpenShift secret
  shell: |
    oc extract --namespace {{ current_cp4d_cluster.project }} secret/admin-user-details --to=-
  register: _cp4d_admin_password_secret

- name: Show existing admin password from secret
  debug:
    var: _cp4d_admin_password_secret

- name: Get route to Cloud Pak for Data
  shell: |
    oc --namespace {{ current_cp4d_cluster.project }} get route -l component=ibm-nginx \
      -o jsonpath="{.items[0].spec.host}"
  register: cp4d_url

- name: Login to Cloud Pak for Data using password in OpenShift secret
  uri:
    url: 'https://{{ cp4d_url.stdout }}/icp4d-api/v1/authorize'
    method: POST
    body_format: json
    body: '{"username":"{{ cp4d_login_username }}","password":"{{ _cp4d_admin_password_secret.stdout }}"}'
    force: yes
    return_content: yes
    validate_certs: no
    status_code: 200
  register: _cp4d_login_result
  retries: 3
  delay: 5
  until: _cp4d_login_result.status == 200

- name: Generate new password for admin user
  block:

  - name: Generate new password for {{ cp4d_login_username }} user
    set_fact:
      _cp4d_admin_password_new: "{{ lookup('password', '/dev/null length=25 chars=ascii_letters') }}"

  - name: Store the CP4D admin password into the vault as {{ _cp4d_admin_password_vault_key_name }}
    include_role:
      name: vault-create-secret
    vars:
      secret_name: "{{ _cp4d_admin_password_vault_key_name }}"
      secret_description: "CP4D admin password for namespace {{ current_cp4d_cluster.project }}, cluster {{ current_cp4d_cluster.openshift_cluster_name }}"
      secret_payload: "{{ _cp4d_admin_password_new }}"
      secret_group: "{{ environment_name }}"

  - set_fact:
      _cp4d_admin_password_vault: "{{ _cp4d_admin_password_new }}"

  when: _cp4d_admin_password_vault==""

- name: Set new password for user {{ cp4d_login_username }}
  shell: |
    curl -s -k -X POST https://{{ cp4d_url.stdout }}/icp4d-api/v1/changepassword \
          -H 'Authorization: Bearer {{ _cp4d_login_result.json.token }}' \
          -H 'Content-Type: multipart/form-data' \
          -H 'cache-control: no-cache' \
          -F current_password={{ _cp4d_admin_password_secret.stdout }} \
          -F new_password={{ _cp4d_admin_password_vault }}
  register: _cp4d_change_password_result
  retries: 3
  delay: 5
  until: _cp4d_change_password_result.rc==0
  args:
    warn: false
  when: _cp4d_admin_password_secret.stdout != _cp4d_admin_password_vault

# Store password from vault into secret (also in case of reinstallation with existing vault secret)
- name: Update {{ cp4d_login_username }} password in OpenShift secret
  shell: |
    oc set data --namespace {{ current_cp4d_cluster.project }} secret/admin-user-details \
      --from-literal=initial_admin_password="{{ _cp4d_admin_password_vault }}"
  when: _cp4d_admin_password_secret.stdout != _cp4d_admin_password_vault
