---
- include_role:
    name: cp4d-variables

- name: Get cartridges with CR details
  set_fact:
    _cartridges_to_install: >-
      {{ _cartridges_to_install | default([]) 
        + [ item | combine(_cartridge_cr_item) | combine(_cartridge_olm_utils_item) | combine(_case_inventories_item) ]
      }}
  vars:
    _cartridge_cr_item: >-
          {{ cartridge_cr
            | selectattr('name','equalto',item['name'])
            | list
            | first
            | default([])
          }}
    _cartridge_olm_utils_item: >-
          {{ cartridge_cr
            | selectattr('olm_utils_name','equalto',item['name'])
            | list
            | first
            | default([])
          }}
    _case_inventories_item: >-
          {{ case_inventories
            | selectattr('name','equalto',item['name'])
            | list
            | first
            | default([])
          }}
  loop: "{{ _p_current_cp4d_cluster.cartridges }}"

# Create Foundational Services project for Cloud Pak for Data
- name: Create OpenShift Project {{ foundational_services_project }} if it does not exist
  shell: 
    oc new-project {{ foundational_services_project }} || true

# Create Operator Group
- name: Generate definition for OperatorGroup
  template:
    src: operator-group.j2
    dest: "{{ status_dir }}/cp4d/operator-group.yml"

- name: Create OperatorGroup
  command: |
    oc apply -f "{{ status_dir }}/cp4d/operator-group.yml"

- include_tasks: cp4d-create-subscriptions.yml
  when: not (_p_current_cp4d_cluster.olm_utils | default(False) | bool)

- include_tasks: cp4d-create-subscriptions-olm-utils.yml
  when: (_p_current_cp4d_cluster.olm_utils | default(False) | bool)