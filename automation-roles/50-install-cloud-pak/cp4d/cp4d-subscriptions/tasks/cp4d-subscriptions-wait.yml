---
- block:
  - name: Wait for operator subscriptions
    debug:
      msg: "Wait for creation of operator subscription for cartridge {{ current_cp4d_cartridge.name }} for CP4D cluster {{ _p_current_cp4d_cluster.project }}"

  - block:
    - name: Find label for cartridge {{ current_cp4d_cartridge.name }}
      set_fact:
        cartridge_csv_label: "{{ cartridge_csv | json_query(jmes_query) }}"
      vars:
        jmes_query: "[?name == '{{ current_cp4d_cartridge.name }}'].cartridge_label | [0]"

    - name: Fail if the label for the cartridge cannot be found
      fail:
        msg: "Label for cartridge {{ current_cp4d_cartridge.name }} not found, cannot check if CSV is successfully installed"
      when: 
      - cartridge_csv_label == ""

    # Wait until subscription for cartridge has been successfully created
    - name: Wait until CSV for cartridge {{ current_cp4d_cartridge.name }}, label {{ cartridge_csv_label }} has status Succeeded
      shell: |
        oc get csv -n {{ foundational_services_project }} \
          --no-headers \
          -l {{ cartridge_csv_label }} \
          -o custom-columns='name:metadata.name,phase:status.phase' | \
          grep -i succeeded | wc -l
      register: csv_status
      retries: 30
      delay: 30
      until: csv_status.stdout != "0"
      vars:
        ansible_callback_diy_runner_retry_msg: >-
          {%- set result = ansible_callback_diy.result.output -%}
          {%- set retries_left = result.retries - result.attempts -%}
          Retrying: {{ ansible_callback_diy.task.name }} ({{ retries_left }} Retries left) ...
    when: 
    - not current_cp4d_cartridge.name in ['cpfs','cp-foundation','cpd_platform','lite']

  when: 
  - (current_cp4d_cartridge.state | default('installed')) == 'installed' or (cpd_test_cartridges | default(False) | bool)
  - not (_cartridge_details.cr_internal | default(False) | bool)
