---

# TODO(SJ): Storage classes - adapt for CP4I specifics (1)

- debug:
    msg: Current CP4I cluster is {{ current_cp4i_cluster }}

- set_fact:
    openshift_storage: "{{ all_config.openshift | json_query(query) | first }}"
  vars:
    query: >-
      [?name=='{{ current_cp4i_cluster.openshift_cluster_name }}'].openshift_storage

- debug:
    msg: "{{ openshift_storage }}"

# Obtain the OpenShift storage element from the openshift storage definitions
- set_fact:
    selected_openshift_storage: "{{ openshift_storage | json_query(query) | first | default({}) }}"
  vars:
    query: >-
      [?storage_name=='{{ current_cp4i_cluster.openshift_storage_name }}']

- fail:
    msg: "Storage information for storage name {{ current_cp4i_cluster.openshift_storage_name }} specified for CP4I cluster {{ current_cp4i_cluster.openshift_cluster_name }} not found. Check the configuration."
  when: selected_openshift_storage == {}

- name: Show storage class construct
  debug:
    var: selected_openshift_storage

- set_fact:
    ocp_storage_class_file: "{{ selected_openshift_storage.ocp_storage_class_file | default('managed-nfs-storage') }}"
    ocp_storage_class_block: "{{ selected_openshift_storage.ocp_storage_class_block | default('managed-nfs-storage') }}"
  when: selected_openshift_storage.storage_type == 'nfs'

- set_fact:
    ocp_storage_class_file: "{{ selected_openshift_storage.ocp_storage_class_file | default('ocs-storagecluster-cephfs') }}"
    ocp_storage_class_block: "{{ selected_openshift_storage.ocp_storage_class_block | default('ocs-storagecluster-ceph-rbd') }}"
  when: selected_openshift_storage.storage_type == 'ocs'


- name: Check if file storage class {{ ocp_storage_class_file }} exists in OpenShift
  shell:
    oc get sc {{ ocp_storage_class_file }}

- name: Check if block storage class {{ ocp_storage_class_block }} exists in OpenShift
  shell:
    oc get sc {{ ocp_storage_class_block }}
  when: ocp_storage_class_block != ocp_storage_class_file