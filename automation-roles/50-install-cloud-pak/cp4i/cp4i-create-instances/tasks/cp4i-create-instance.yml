---

- name: Get instance type details
  set_fact:
    instance_type: "{{ instance_types | json_query(query) | first | default({}) }}"
  vars:
    query: >-
      [?type=='{{ current_cp4i_instance.type }}']

- name: Fail if the instance type cannot be found
  fail:
    msg: Case instance type for instance {{ current_cp4i_instance..name }} not found. 
  when: instance_type=={}

- name: Set instance subscription details - online
  block:
    - set_fact:
        inst_package: "{{ instance_type.package_name_online }}"
    - set_fact:
        inst_source: "{{ instance_type.catalog_source_online }}"
  when: not _use_case_files

- name: Set instance subscription details - CASE
  block:
    - set_fact:
        inst_package: "{{ instance_type.package_name_case }}"
    - set_fact:
        inst_source: "{{ instance_type.catalog_source_case }}"
  when: not _use_case_files

- name: Wait for the {{inst_package}} subscription
  shell: |
    subscription_name="{{inst_package}}-{{current_cp4i_instance.channel}}-{{inst_source}}-openshift-marketplace"
    csv=$(oc get subscription -n openshift-operators ${subscription_name} -o json | jq -r .status.currentCSV)
    if [[ "$csv" == "null" ]]; then
      echo "null"
    else
      oc get csv -n openshift-operators ${csv} -o json 2>/dev/null | jq -r .status.phase
    fi
  register: pn_phase
  retries: 100
  delay: 20
  until: pn_phase.stdout == "Succeeded"

- name: Check if the {{current_cp4i_instance.type}} {{current_cp4i_instance.name}} already exists
  shell: |
    oc get {{instance_type.kind}} {{current_cp4i_instance.name}} -n {{current_cp4i_cluster.project}} | grep -i '^{{current_cp4i_instance.name}}' | wc -l
  register: instance_exists  

- set_fact:
    instance_template: "{{ current_cp4i_instance.template | default(default_template_name) }}"
  vars:
    default_template_name: "{{ instance_type.default_template }}"

- name: Prepare yaml file for creating instance
  template:
    src: "{{instance_template}}.j2"
    dest: "{{ status_dir }}/cp4i/{{current_cp4i_instance.type}}-{{current_cp4i_instance.name}}.yml"
  when: instance_exists.stdout == "0"

- name: Create instance from {{ status_dir }}/cp4i/{{current_cp4i_instance.type}}-{{current_cp4i_instance.name}}.yml
  shell: |
    oc apply -f {{ status_dir }}/cp4i/{{current_cp4i_instance.type}}-{{current_cp4i_instance.name}}.yml
  when: instance_exists.stdout == "0"


# We don't wait here that the instance becomes ready. Insead, we just "fire and forget". 
# If there is a requirement that the instance must be ready before any of the further actions,
# we will check this in the cloud pak configuration tasks (60-configure-cloud-pak).
