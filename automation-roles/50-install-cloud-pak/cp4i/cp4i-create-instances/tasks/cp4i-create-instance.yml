---

- name: Wait for the {{current_cp4i_instance.package}} subscription
  shell: |
    subscription_name="{{current_cp4i_instance.package}}-{{current_cp4i_instance.channel}}-{{current_cp4i_instance.source}}-openshift-marketplace"
    csv=$(oc get subscription -n openshift-operators ${subscription_name} -o json | jq -r .status.currentCSV)
    if [[ "$csv" == "null" ]]; then
      echo "null"
    else
      oc get csv -n openshift-operators ${csv} -o json 2>/dev/null | jq -r .status.phase
    fi
  register: pn_phase
  retries: 100
  delay: 20
  until: pn_phase.stdout == "Succeeded"

- set_fact:
    cp4i_package: "{{ current_cp4i_instance.package }}"

- name: Create instance of the Operations Dashboard
  include_tasks: create-operations-dashboard.yml
  when: cp4i_package == "ibm-integration-operations-dashboard"

- name: Create instance of the Asset Repo
  include_tasks: create-asset-repo.yml
  when: cp4i_package == "ibm-integration-asset-repository"

- name: Create instance of the API Connect
  include_tasks: create-apiconnect.yml
  when: cp4i_package == "ibm-apiconnect"

- name: Create instance of the App Connect
  include_tasks: create-appconnect.yml
  when: cp4i_package == "ibm-appconnect"

- name: Create instance of the Aspera HSTS
  include_tasks: create-aspera.yml
  when: cp4i_package == "aspera-hsts-operator"

- name: Create instance of the DataPower Gateway
  include_tasks: create-datapower.yml
  when: cp4i_package == "datapower-operator"

- name: Create instance of the Event Streams
  include_tasks: create-eventstreams.yml
  when: cp4i_package == "ibm-eventstreams"

- name: Create instance of the MQ
  include_tasks: create-mq.yml
  when: cp4i_package == "ibm-mq"
