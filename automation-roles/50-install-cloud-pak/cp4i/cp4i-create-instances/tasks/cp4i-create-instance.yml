---

- name: Wait for the {{current_cp4i_instance.package}} subscription
  shell: |
    subscription_name="{{current_cp4i_instance.package}}-{{current_cp4i_instance.channel}}-{{current_cp4i_instance.source}}-openshift-marketplace"
    csv=$(oc get subscription -n openshift-operators ${subscription_name} -o json | jq -r .status.currentCSV)
    if [[ "$csv" == "null" ]]; then
      echo "null"
    else
      oc get csv -n openshift-operators ${csv} -o json 2>/dev/null | jq -r .status.phase
    fi
  register: pn_phase
  retries: 100
  delay: 20
  until: pn_phase.stdout == "Succeeded"

- name: Check if the {{current_cp4i_instance.kind}} {{current_cp4i_instance.name}} already exists
  shell: |
    oc get {{current_cp4i_instance.kind}} {{current_cp4i_instance.name}} -n {{current_cp4i_cluster.project}} | | grep -i '^{{current_cp4i_instance.name}}' | wc -l
  register: instance_exists  

- name: Prepare yaml file for creating instance
  template:
    src: "{{current_cp4i_instance.template}}.j2"
    dest: "{{ status_dir }}/cp4i/{{current_cp4i_instance.name}}.yml"
  when: instance_exists.stdout == "0"

- name: Create instance from {{ status_dir }}/cp4di/{{current_cp4i_instance.name}}.yml
  shell: |
    oc apply -f {{ status_dir }}/cp4i/{{current_cp4i_instance.name}}.yml
  when: instance_exists.stdout == "0"


# We don't wait here that the instance becomes ready. Insead, we just "fire and forget". 
# If there is a requirement that the instance must be ready before any of the further actions,
# we will check this in the cloud pak configuration tasks (60-configure-cloud-pak).
