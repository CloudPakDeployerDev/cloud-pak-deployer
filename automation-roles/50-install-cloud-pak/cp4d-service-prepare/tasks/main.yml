---
- debug:
    msg: "Preparing custom resources for CP4D cartridge {{ current_cp4d_cartridge.name }} for CP4D cluster {{ current_cp4d_cluster.project }}"

# Create operator subscription
- name: Prepare yaml file for operator subscription {{ current_cp4d_cartridge.name }}
  template:
    src: "{{ current_cp4d_cartridge.name }}-sub.j2"
    dest: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-{{ current_cp4d_cartridge.name }}-sub.yml"
  when: current_cp4d_cartridge.name != "lite"

- name: Create subscription for cartridge {{ current_cp4d_cartridge.name }}
  command: |
    oc apply -f "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-{{ current_cp4d_cartridge.name }}-sub.yml"
  when: current_cp4d_cartridge.name != "lite"

- name: Find label for cartridge {{ current_cp4d_cartridge.name }}
  set_fact:
    cartridge_csv_label: "{{ cartridge_csv | json_query(jmes_query) }}"
  vars:
    jmes_query: "[?name == '{{ current_cp4d_cartridge.name }}'].cartridge_label | [0]"
  when: current_cp4d_cartridge.name != "lite"

- fail:
    msg: "Label for cartridge {{ current_cp4d_cartridge.name }} not found, cannot check if CSV is successfully installed"
  when: 
  - current_cp4d_cartridge.name != "lite"
  - cartridge_csv_label == ""

# Wait until subscription for cartridge has been successfully created
- name: Wait until CSV for cartridge {{ current_cp4d_cartridge.name }}, label {{ cartridge_csv_label }} has status Succeeded
  shell: |
     oc get csv -n {{ foundational_services_project }} \
      --no-headers \
      -l {{ cartridge_csv_label }} \
      -o custom-columns='name:metadata.name,phase:status.phase' | \
      grep {{ current_cp4d_cartridge.name }} | grep -i succeeded | wc -l
  register: csv_status
  retries: 30
  delay: 30
  until: csv_status.stdout == "1"
  when: current_cp4d_cartridge.name != "lite"
  vars:
    # ansible_callback_diy_playbook_on_task_start_msg: "TASK [{{ ansible_callback_diy.task.name }}] \n{{ lookup('pipe','date') }}"
    ansible_callback_diy_runner_retry_msg: >-
      {%- set result = ansible_callback_diy.result.output -%}
      {%- set retries_left = result.retries - result.attempts -%}
      "RETRYING: {{ ansible_callback_diy.task.name }} ({{ retries_left }} Retries left) ..."
