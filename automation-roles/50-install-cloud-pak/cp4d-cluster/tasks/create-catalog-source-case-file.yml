---
- name: Strip off path from file {{ case_file.path }} and extract case name
  set_fact:
    case_name: "{{case_file.path | basename | regex_search('(.*)(-\\d)','\\1') | first}}"

- name: Find inventory for case {{ case_name }}
  set_fact:
    inventory_name: "{{ case_inventories | json_query(jmes_query) }}"
  vars:
    jmes_query: "[?search_string == '{{case_name}}'].inventory | [0]"

- debug:
    var: inventory_name

- name: Install CatalogSource for platform operator from case file {{ case_file.path }} using private registry
  shell: |
    cloudctl case launch --case {{ case_file.path }} \
      --inventory {{ inventory_name }} \
      --namespace openshift-marketplace \
      --action install-catalog \
      --args "--registry {{ ibm_cloud_cr_server }}/{{ current_cp4d_cluster.container_registry_namespace }}/cpopen \
      --inputDir {{ case_dir }} \
      --recursive"
  when: 
  - case_name == "ibm-cp-datacore"

- name: Install CatalogSource for foundational services from case file {{ case_file.path }} using private registry
  shell: |
    cloudctl case launch --case {{ case_file.path }} \
      --inventory {{ inventory_name }} \
      --namespace openshift-marketplace \
      --action install-catalog \
      --args "--registry {{ ibm_cloud_cr_server }}/{{ current_cp4d_cluster.container_registry_namespace }}/cpopen \
      --inputDir {{ case_dir }} \
      --recursive"
  when: 
  - case_name == "ibm-cp-common-services"

- name: Install CatalogSource using case file {{ case_file.path }} using private registry
  shell: |
    cloudctl case launch --case {{ case_file.path }} \
      --inventory {{ inventory_name }} \
      --namespace openshift-marketplace \
      --action install-catalog \
      --args "--registry {{ ibm_cloud_cr_server }}/{{ current_cp4d_cluster.container_registry_namespace }} \
      --inputDir {{ case_dir }} \
      --recursive"
  when: 
  - inventory_name != ""
  - case_name != "ibm-cp-datacore"
  - case_name != "ibm-cp-common-services"